/*
 * OpenApi
 *  ## ![N|Solid](https://duett.no/wp-content/uploads/2018/10/cropped-Duett-favicon-32x32.png)  _How to take the Duett api in use_  To be able to use the API, you must have an interaction key and a client key.  Eksample curl: ```swift    curl -X 'GET' \\   'https://api.duett.no/article/v1 \\   -H 'accept: application/json' \\   -H 'X-Api-Integration-Key: 89ff1c42-9d90-435a-8a94-20207bc06e1a' \\   -H 'X-Api-Client-Key: 7896feb3-aaa2-4fd2-aaa2-c69de5fd1e5f' ``` ##### [Metode description][1] ##### [Filtering data in openApi][2]   ### Use a code generator as to auto-generate api client:  ##### [NSwagStudio](https://github.com/RicoSuter/NSwag/wiki/NSwagStudio) ##### [Visual studio add-in](https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator) \\ ##### [Online code generator for many languages and versions](https://github.com/swagger-api/swagger-codegen)  *** [1]: ../metods-help.html [2]: ../query-help.html
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HourRegistrationCarrierCreate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * HourRegistrationCreate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-25T13:43:16.684Z[GMT]")
public class HourRegistrationCreate {
  @SerializedName("externalId")
  private String externalId = null;

  @SerializedName("masterRefId")
  private Integer masterRefId = null;

  @SerializedName("hourDate")
  private OffsetDateTime hourDate = null;

  @SerializedName("hourCount")
  private Double hourCount = null;

  @SerializedName("hourPrice")
  private Double hourPrice = null;

  @SerializedName("hoursInvoiced")
  private Double hoursInvoiced = null;

  @SerializedName("totalPrice")
  private Double totalPrice = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("articleId")
  private Integer articleId = null;

  @SerializedName("carriers")
  private List<HourRegistrationCarrierCreate> carriers = null;

  @SerializedName("customerId")
  private Integer customerId = null;

  public HourRegistrationCreate externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Use this as your reference
   * @return externalId
  **/
  @Schema(description = "Use this as your reference")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public HourRegistrationCreate masterRefId(Integer masterRefId) {
    this.masterRefId = masterRefId;
    return this;
  }

   /**
   * The reference to the master hourRegistration in a group
   * @return masterRefId
  **/
  @Schema(description = "The reference to the master hourRegistration in a group")
  public Integer getMasterRefId() {
    return masterRefId;
  }

  public void setMasterRefId(Integer masterRefId) {
    this.masterRefId = masterRefId;
  }

  public HourRegistrationCreate hourDate(OffsetDateTime hourDate) {
    this.hourDate = hourDate;
    return this;
  }

   /**
   * Get hourDate
   * @return hourDate
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getHourDate() {
    return hourDate;
  }

  public void setHourDate(OffsetDateTime hourDate) {
    this.hourDate = hourDate;
  }

  public HourRegistrationCreate hourCount(Double hourCount) {
    this.hourCount = hourCount;
    return this;
  }

   /**
   * Get hourCount
   * @return hourCount
  **/
  @Schema(description = "")
  public Double getHourCount() {
    return hourCount;
  }

  public void setHourCount(Double hourCount) {
    this.hourCount = hourCount;
  }

  public HourRegistrationCreate hourPrice(Double hourPrice) {
    this.hourPrice = hourPrice;
    return this;
  }

   /**
   * Get hourPrice
   * @return hourPrice
  **/
  @Schema(description = "")
  public Double getHourPrice() {
    return hourPrice;
  }

  public void setHourPrice(Double hourPrice) {
    this.hourPrice = hourPrice;
  }

  public HourRegistrationCreate hoursInvoiced(Double hoursInvoiced) {
    this.hoursInvoiced = hoursInvoiced;
    return this;
  }

   /**
   * Get hoursInvoiced
   * @return hoursInvoiced
  **/
  @Schema(description = "")
  public Double getHoursInvoiced() {
    return hoursInvoiced;
  }

  public void setHoursInvoiced(Double hoursInvoiced) {
    this.hoursInvoiced = hoursInvoiced;
  }

  public HourRegistrationCreate totalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

   /**
   * Get totalPrice
   * @return totalPrice
  **/
  @Schema(description = "")
  public Double getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
  }

  public HourRegistrationCreate description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public HourRegistrationCreate articleId(Integer articleId) {
    this.articleId = articleId;
    return this;
  }

   /**
   * Get articleId
   * @return articleId
  **/
  @Schema(description = "")
  public Integer getArticleId() {
    return articleId;
  }

  public void setArticleId(Integer articleId) {
    this.articleId = articleId;
  }

  public HourRegistrationCreate carriers(List<HourRegistrationCarrierCreate> carriers) {
    this.carriers = carriers;
    return this;
  }

  public HourRegistrationCreate addCarriersItem(HourRegistrationCarrierCreate carriersItem) {
    if (this.carriers == null) {
      this.carriers = new ArrayList<HourRegistrationCarrierCreate>();
    }
    this.carriers.add(carriersItem);
    return this;
  }

   /**
   * Get carriers
   * @return carriers
  **/
  @Schema(description = "")
  public List<HourRegistrationCarrierCreate> getCarriers() {
    return carriers;
  }

  public void setCarriers(List<HourRegistrationCarrierCreate> carriers) {
    this.carriers = carriers;
  }

  public HourRegistrationCreate customerId(Integer customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @Schema(description = "")
  public Integer getCustomerId() {
    return customerId;
  }

  public void setCustomerId(Integer customerId) {
    this.customerId = customerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HourRegistrationCreate hourRegistrationCreate = (HourRegistrationCreate) o;
    return Objects.equals(this.externalId, hourRegistrationCreate.externalId) &&
        Objects.equals(this.masterRefId, hourRegistrationCreate.masterRefId) &&
        Objects.equals(this.hourDate, hourRegistrationCreate.hourDate) &&
        Objects.equals(this.hourCount, hourRegistrationCreate.hourCount) &&
        Objects.equals(this.hourPrice, hourRegistrationCreate.hourPrice) &&
        Objects.equals(this.hoursInvoiced, hourRegistrationCreate.hoursInvoiced) &&
        Objects.equals(this.totalPrice, hourRegistrationCreate.totalPrice) &&
        Objects.equals(this.description, hourRegistrationCreate.description) &&
        Objects.equals(this.articleId, hourRegistrationCreate.articleId) &&
        Objects.equals(this.carriers, hourRegistrationCreate.carriers) &&
        Objects.equals(this.customerId, hourRegistrationCreate.customerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalId, masterRefId, hourDate, hourCount, hourPrice, hoursInvoiced, totalPrice, description, articleId, carriers, customerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HourRegistrationCreate {\n");
    
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    masterRefId: ").append(toIndentedString(masterRefId)).append("\n");
    sb.append("    hourDate: ").append(toIndentedString(hourDate)).append("\n");
    sb.append("    hourCount: ").append(toIndentedString(hourCount)).append("\n");
    sb.append("    hourPrice: ").append(toIndentedString(hourPrice)).append("\n");
    sb.append("    hoursInvoiced: ").append(toIndentedString(hoursInvoiced)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    articleId: ").append(toIndentedString(articleId)).append("\n");
    sb.append("    carriers: ").append(toIndentedString(carriers)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
