/*
 * OpenApi
 *  ## ![N|Solid](https://duett.no/wp-content/uploads/2018/10/cropped-Duett-favicon-32x32.png)  _How to take the Duett api in use_  To be able to use the API, you must have an interaction key and a client key.  Eksample curl: ```swift    curl -X 'GET' \\   'https://api.duett.no/article/v1 \\   -H 'accept: application/json' \\   -H 'X-Api-Integration-Key: 89ff1c42-9d90-435a-8a94-20207bc06e1a' \\   -H 'X-Api-Client-Key: 7896feb3-aaa2-4fd2-aaa2-c69de5fd1e5f' ``` ##### [Metode description][1] ##### [Filtering data in openApi][2]   ### Use a code generator as to auto-generate api client:  ##### [NSwagStudio](https://github.com/RicoSuter/NSwag/wiki/NSwagStudio) ##### [Visual studio add-in](https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator) \\ ##### [Online code generator for many languages and versions](https://github.com/swagger-api/swagger-codegen)  *** [1]: ../metods-help.html [2]: ../query-help.html
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ProjectCarrierCreate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * ProjectCreate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-25T13:43:16.684Z[GMT]")
public class ProjectCreate {
  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("actualEndDate")
  private OffsetDateTime actualEndDate = null;

  @SerializedName("contractSum")
  private Double contractSum = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("customerId")
  private Integer customerId = null;

  @SerializedName("projectLeaderCarrierId")
  private Integer projectLeaderCarrierId = null;

  @SerializedName("carrier")
  private ProjectCarrierCreate carrier = null;

  public ProjectCreate startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public ProjectCreate endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @Schema(description = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public ProjectCreate actualEndDate(OffsetDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
    return this;
  }

   /**
   * Get actualEndDate
   * @return actualEndDate
  **/
  @Schema(description = "")
  public OffsetDateTime getActualEndDate() {
    return actualEndDate;
  }

  public void setActualEndDate(OffsetDateTime actualEndDate) {
    this.actualEndDate = actualEndDate;
  }

  public ProjectCreate contractSum(Double contractSum) {
    this.contractSum = contractSum;
    return this;
  }

   /**
   * Get contractSum
   * @return contractSum
  **/
  @Schema(description = "")
  public Double getContractSum() {
    return contractSum;
  }

  public void setContractSum(Double contractSum) {
    this.contractSum = contractSum;
  }

  public ProjectCreate description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProjectCreate customerId(Integer customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @Schema(description = "")
  public Integer getCustomerId() {
    return customerId;
  }

  public void setCustomerId(Integer customerId) {
    this.customerId = customerId;
  }

  public ProjectCreate projectLeaderCarrierId(Integer projectLeaderCarrierId) {
    this.projectLeaderCarrierId = projectLeaderCarrierId;
    return this;
  }

   /**
   * Get projectLeaderCarrierId
   * @return projectLeaderCarrierId
  **/
  @Schema(description = "")
  public Integer getProjectLeaderCarrierId() {
    return projectLeaderCarrierId;
  }

  public void setProjectLeaderCarrierId(Integer projectLeaderCarrierId) {
    this.projectLeaderCarrierId = projectLeaderCarrierId;
  }

  public ProjectCreate carrier(ProjectCarrierCreate carrier) {
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @Schema(description = "")
  public ProjectCarrierCreate getCarrier() {
    return carrier;
  }

  public void setCarrier(ProjectCarrierCreate carrier) {
    this.carrier = carrier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectCreate projectCreate = (ProjectCreate) o;
    return Objects.equals(this.startDate, projectCreate.startDate) &&
        Objects.equals(this.endDate, projectCreate.endDate) &&
        Objects.equals(this.actualEndDate, projectCreate.actualEndDate) &&
        Objects.equals(this.contractSum, projectCreate.contractSum) &&
        Objects.equals(this.description, projectCreate.description) &&
        Objects.equals(this.customerId, projectCreate.customerId) &&
        Objects.equals(this.projectLeaderCarrierId, projectCreate.projectLeaderCarrierId) &&
        Objects.equals(this.carrier, projectCreate.carrier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, endDate, actualEndDate, contractSum, description, customerId, projectLeaderCarrierId, carrier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectCreate {\n");
    
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    actualEndDate: ").append(toIndentedString(actualEndDate)).append("\n");
    sb.append("    contractSum: ").append(toIndentedString(contractSum)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    projectLeaderCarrierId: ").append(toIndentedString(projectLeaderCarrierId)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
