/*
 * OpenApi
 *  ## ![N|Solid](https://duett.no/wp-content/uploads/2018/10/cropped-Duett-favicon-32x32.png)  _How to take the Duett api in use_  To be able to use the API, you must have an interaction key and a client key.  Eksample curl: ```swift    curl -X 'GET' \\   'https://api.duett.no/article/v1 \\   -H 'accept: application/json' \\   -H 'X-Api-Integration-Key: 89ff1c42-9d90-435a-8a94-20207bc06e1a' \\   -H 'X-Api-Client-Key: 7896feb3-aaa2-4fd2-aaa2-c69de5fd1e5f' ``` ##### [Metode description][1] ##### [Filtering data in openApi][2]   ### Use a code generator as to auto-generate api client:  ##### [NSwagStudio](https://github.com/RicoSuter/NSwag/wiki/NSwagStudio) ##### [Visual studio add-in](https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator) \\ ##### [Online code generator for many languages and versions](https://github.com/swagger-api/swagger-codegen)  *** [1]: ../metods-help.html [2]: ../query-help.html
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ArticleMetadata;
import io.swagger.client.model.ArticleType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ArticleCreate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-11-25T13:43:16.684Z[GMT]")
public class ArticleCreate {
  @SerializedName("articleNumber")
  private String articleNumber = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("articleType")
  private ArticleType articleType = null;

  @SerializedName("salesPrice")
  private Double salesPrice = null;

  @SerializedName("metadata")
  private ArticleMetadata metadata = null;

  @SerializedName("unit")
  private String unit = null;

  public ArticleCreate articleNumber(String articleNumber) {
    this.articleNumber = articleNumber;
    return this;
  }

   /**
   * Get articleNumber
   * @return articleNumber
  **/
  @Schema(required = true, description = "")
  public String getArticleNumber() {
    return articleNumber;
  }

  public void setArticleNumber(String articleNumber) {
    this.articleNumber = articleNumber;
  }

  public ArticleCreate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ArticleCreate articleType(ArticleType articleType) {
    this.articleType = articleType;
    return this;
  }

   /**
   * Get articleType
   * @return articleType
  **/
  @Schema(required = true, description = "")
  public ArticleType getArticleType() {
    return articleType;
  }

  public void setArticleType(ArticleType articleType) {
    this.articleType = articleType;
  }

  public ArticleCreate salesPrice(Double salesPrice) {
    this.salesPrice = salesPrice;
    return this;
  }

   /**
   * Get salesPrice
   * @return salesPrice
  **/
  @Schema(description = "")
  public Double getSalesPrice() {
    return salesPrice;
  }

  public void setSalesPrice(Double salesPrice) {
    this.salesPrice = salesPrice;
  }

  public ArticleCreate metadata(ArticleMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public ArticleMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(ArticleMetadata metadata) {
    this.metadata = metadata;
  }

  public ArticleCreate unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @Schema(description = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArticleCreate articleCreate = (ArticleCreate) o;
    return Objects.equals(this.articleNumber, articleCreate.articleNumber) &&
        Objects.equals(this.name, articleCreate.name) &&
        Objects.equals(this.articleType, articleCreate.articleType) &&
        Objects.equals(this.salesPrice, articleCreate.salesPrice) &&
        Objects.equals(this.metadata, articleCreate.metadata) &&
        Objects.equals(this.unit, articleCreate.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(articleNumber, name, articleType, salesPrice, metadata, unit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArticleCreate {\n");
    
    sb.append("    articleNumber: ").append(toIndentedString(articleNumber)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    articleType: ").append(toIndentedString(articleType)).append("\n");
    sb.append("    salesPrice: ").append(toIndentedString(salesPrice)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
