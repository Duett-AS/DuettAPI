/* 
 * OpenApi
 *
 *  ## ![N|Solid](https://duett.no/wp-content/uploads/2018/10/cropped-Duett-favicon-32x32.png)  _How to take the Duett api in use_  To be able to use the API, you must have an interaction key and a client key.  Eksample curl: ```swift    curl -X 'GET' \\   'https://api.duett.no/article/v1 \\   -H 'accept: application/json' \\   -H 'X-Api-Integration-Key: 89ff1c42-9d90-435a-8a94-20207bc06e1a' \\   -H 'X-Api-Client-Key: 7896feb3-aaa2-4fd2-aaa2-c69de5fd1e5f' ``` ##### [Metode description][1] ##### [Filtering data in openApi][2]   ### Use a code generator as to auto-generate api client:  ##### [NSwagStudio](https://github.com/RicoSuter/NSwag/wiki/NSwagStudio) ##### [Visual studio add-in](https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator) \\ ##### [Online code generator for many languages and versions](https://github.com/swagger-api/swagger-codegen)  *** [1]: ../metods-help.html [2]: ../query-help.html
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Defines CarrierTypeKind
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
        public enum CarrierTypeKind
    {
        /// <summary>
        /// Enum Free for value: free
        /// </summary>
        [EnumMember(Value = "free")]
        Free = 1,
        /// <summary>
        /// Enum Project for value: project
        /// </summary>
        [EnumMember(Value = "project")]
        Project = 2,
        /// <summary>
        /// Enum Production for value: production
        /// </summary>
        [EnumMember(Value = "production")]
        Production = 3,
        /// <summary>
        /// Enum Employee for value: employee
        /// </summary>
        [EnumMember(Value = "employee")]
        Employee = 4,
        /// <summary>
        /// Enum Department for value: department
        /// </summary>
        [EnumMember(Value = "department")]
        Department = 5,
        /// <summary>
        /// Enum Task for value: task
        /// </summary>
        [EnumMember(Value = "task")]
        Task = 6,
        /// <summary>
        /// Enum Activity for value: activity
        /// </summary>
        [EnumMember(Value = "activity")]
        Activity = 7,
        /// <summary>
        /// Enum Year for value: year
        /// </summary>
        [EnumMember(Value = "year")]
        Year = 8,
        /// <summary>
        /// Enum Product for value: product
        /// </summary>
        [EnumMember(Value = "product")]
        Product = 9,
        /// <summary>
        /// Enum Trade for value: trade
        /// </summary>
        [EnumMember(Value = "trade")]
        Trade = 10,
        /// <summary>
        /// Enum Asset for value: asset
        /// </summary>
        [EnumMember(Value = "asset")]
        Asset = 11,
        /// <summary>
        /// Enum CostType for value: costType
        /// </summary>
        [EnumMember(Value = "costType")]
        CostType = 12,
        /// <summary>
        /// Enum WorkType for value: workType
        /// </summary>
        [EnumMember(Value = "workType")]
        WorkType = 13,
        /// <summary>
        /// Enum Contract for value: contract
        /// </summary>
        [EnumMember(Value = "contract")]
        Contract = 14,
        /// <summary>
        /// Enum RealEstate for value: realEstate
        /// </summary>
        [EnumMember(Value = "realEstate")]
        RealEstate = 15,
        /// <summary>
        /// Enum Person for value: person
        /// </summary>
        [EnumMember(Value = "person")]
        Person = 16,
        /// <summary>
        /// Enum Issuer for value: issuer
        /// </summary>
        [EnumMember(Value = "issuer")]
        Issuer = 17,
        /// <summary>
        /// Enum Team for value: team
        /// </summary>
        [EnumMember(Value = "team")]
        Team = 18,
        /// <summary>
        /// Enum Product2 for value: product2
        /// </summary>
        [EnumMember(Value = "product2")]
        Product2 = 19,
        /// <summary>
        /// Enum Detail for value: detail
        /// </summary>
        [EnumMember(Value = "detail")]
        Detail = 20,
        /// <summary>
        /// Enum Quality for value: quality
        /// </summary>
        [EnumMember(Value = "quality")]
        Quality = 21,
        /// <summary>
        /// Enum AdditionalTrait for value: additionalTrait
        /// </summary>
        [EnumMember(Value = "additionalTrait")]
        AdditionalTrait = 22,
        /// <summary>
        /// Enum Organic for value: organic
        /// </summary>
        [EnumMember(Value = "organic")]
        Organic = 23,
        /// <summary>
        /// Enum ForestInfo for value: forestInfo
        /// </summary>
        [EnumMember(Value = "forestInfo")]
        ForestInfo = 24,
        /// <summary>
        /// Enum Wagetype for value: wagetype
        /// </summary>
        [EnumMember(Value = "wagetype")]
        Wagetype = 25,
        /// <summary>
        /// Enum WorkplaceLocation for value: workplaceLocation
        /// </summary>
        [EnumMember(Value = "workplaceLocation")]
        WorkplaceLocation = 26    }
}
